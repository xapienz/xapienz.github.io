<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Што on привет, как дела?</title>
    <link>/tags/%D1%88%D1%82%D0%BE/</link>
    <description>Recent content in Што on привет, как дела?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-RU</language>
    <lastBuildDate>Wed, 18 Sep 2013 22:10:25 +0600</lastBuildDate>
    <atom:link href="/tags/%D1%88%D1%82%D0%BE/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Клонированный календарик</title>
      <link>/2013/09/18/dolly/</link>
      <pubDate>Wed, 18 Sep 2013 22:10:25 +0600</pubDate>
      
      <guid>/2013/09/18/dolly/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../../img/64.H5.002-150x150.jpg#right&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Продолжаю уже ставшей традиционной цепочку постов о календариках (уже второй пост!).&lt;br /&gt;
Сначала была &lt;a href=&#34;../../2013/07/01/children/&#34;&gt;загадка для детей&lt;/a&gt;. Теперь загадка для повзрослевших. Тех, кто просто пишет на Java (или хотя бы в глаза видел хоть раз строчку import java.util.*) и не интересуется внутренностями какого-то там андроида и дальвика.&lt;/p&gt;

&lt;p&gt;Возьмём такой простенький код. Считаем, что текущая таймзона — Москва. Хотя сработает для любых других, кроме UTC.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;TimeZone utc = TimeZone.getTimeZone(&amp;quot;UTC&amp;quot;);

Calendar calendar = Calendar.getInstance();
calendar.set(2013, Calendar.AUGUST, 14, 0, 0, 0);

Calendar when1 = (Calendar) calendar.clone();
when1.setTimeZone(utc);
System.out.println(calendar.getTime());
System.out.println(when1.getTime());

Calendar when2 = (Calendar) calendar.clone();
when2.setTimeZone(utc);
System.out.println(calendar.getTime());
System.out.println(when2.getTime());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Краткое описание: создаём объект календаря с 14 августа 2013 года, дважды его клонируем, в двух клонах меняем таймзону на UTC и выводим полученное.&lt;/p&gt;

&lt;p&gt;Что же он выведет на экран?&lt;/p&gt;

&lt;p&gt;Вот что:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-none&#34;&gt;Wed Aug 14 00:00:00 MSK 2013
Wed Aug 14 04:00:00 MSK 2013
Wed Aug 14 00:00:00 MSK 2013
Wed Aug 14 00:00:00 MSK 2013
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Необычна вторая строка. Почему-то время не такое, как везде.&lt;/p&gt;

&lt;p&gt;Причина следующая (&lt;a href=&#34;http://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html&#34;&gt;пруф&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;set(f, value) changes calendar field f to value. In addition, it sets an internal member variable to indicate that calendar field f has been changed. Although calendar field f is changed immediately, the calendar&amp;rsquo;s time value in milliseconds is not recomputed until the next call to get(), getTime(), getTimeInMillis(), add(), or roll() is made.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Кратко по-русски: изменение полей в календаре ленивое и сразу не пересчитывает внутреннее состояние (миллисекунды с ~ начала 1970 года) до тех пор, пока не произойдёт попытка что-то из него прочитать.&lt;/p&gt;

&lt;p&gt;А вот то, что из-за вызова clone() потерялась некоторая информация о том, что было изменено и не пересчиталось — баг :)&lt;/p&gt;

&lt;p&gt;Вывод. Использование Calendar.clone() — зло.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Октокот Путина</title>
      <link>/2013/09/16/8cat/</link>
      <pubDate>Mon, 16 Sep 2013 14:10:15 +0600</pubDate>
      
      <guid>/2013/09/16/8cat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../img/putin.png&#34;&gt;&lt;img src=&#34;../../img/putin-300x300.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fyiWillBeAdvancedByHostKThx</title>
      <link>/2013/06/25/wtf/</link>
      <pubDate>Tue, 25 Jun 2013 18:14:00 +0600</pubDate>
      
      <guid>/2013/06/25/wtf/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;public void fyiWillBeAdvancedByHostKThx ()&lt;/p&gt;

&lt;p&gt;Called by an AppWidgetHost to indicate that it will be automatically advancing the views of this AdapterViewFlipper by calling advance() at some point in the future. This allows AdapterViewFlipper to prepare by no longer Advancing its children.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;via &lt;a href=&#34;http://developer.android.com/reference/android/widget/AdapterViewFlipper.html&#34;&gt;http://developer.android.com/reference/android/widget/AdapterViewFlipper.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Называется, решил добавить свайп постов в ленточку)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>